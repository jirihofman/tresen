{"version":3,"sources":["components/TripTable.jsx","journey/Journey.js","logika.js","App.js","serviceWorker.js","index.js"],"names":["TripTable","Component","journeys","console","log","map","journey","i","react_default","a","createElement","key","concat","date","toLocaleDateString","location","start","name","end","distance","note","Table","id","this","renderTableRow","props","Journey","arguments","length","undefined","mileage","Journey_classCallCheck","Journey_createClass","value","type","occasion","flavor","levels","price","Location","code","zip","insideDistance","Trip","roundTrip","generateJourneys","step1","Step1","trips","group","startLocation","isStep1Valid","_isEmpty","error","workDays","dateFromString","dateToString","holidays","arr","dateFrom","Date","dateTo","dt","setDate","getDate","getDay","push","getDays","_shuffle","forEach","journeysKm","reduce","_sample","randomTrip","describe","groupEnd","sort","b","Boolean","valueOf","mileageStart","spz","App_classCallCheck","App_createClass","getSummary","total","odometerStart","Number","odometerEnd","LogBookApp","_this","App_getPrototypeOf","call","LOCATION_PNL","handleStep1Change","bind","App_assertThisInitialized","handleJourneyChange","handleSubmit","handleSetData","year","setState","summary","handleUpdateSummary","state","collapsed","kmTraveled","mileageEnd","React","event","target","checked","_objectSpread","_defineProperty","_this2","disabledButtons","Container","Navbar","color","light","expand","NavbarBrand","role","aria-label","Collapse","isOpen","navbar","Nav","className","NavItem","NavLink","href","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","onClick","alert","Row","Col","Form","inline","Input","hidden","placeholder","valid","invalid","required","onChange","step","Button","FormGroup","Label","for","getFullYear","style","margin","disabled","tbl","document","getElementById","wb","XLSX","utils","table_to_book","raw","writeFile","xs","components_TripTable","window","hostname","match","ReactDOM","render","App_LogBookApp","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a35b3aae.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Table } from 'reactstrap'\n\nclass TripTable extends Component {\n  renderTableRow (journeys) {\n    console.log('renderuju radky:', journeys)\n    return journeys.map((journey, i) => {\n      return (\n        <tr key={`j-${i}`}>\n          <td>{journey.date.toLocaleDateString()}</td>\n          <td>{journey.location.start.name}</td>\n          <td>{journey.location.end.name}</td>\n          <td>{journey.distance}</td>\n          <td>{journey.note}</td>\n        </tr>\n      )\n    })\n  }\n\n  render () {\n    return (\n      <Table id='journeys'>\n        <thead>\n          <tr>\n            <th>Datum</th>\n            <th>Odkud</th>\n            <th>Kam</th>\n            <th>Vzdálenost v km</th>\n            <th>Důvod cesty</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderTableRow(this.props.journeys)}\n        </tbody>\n      </Table>\n    )\n  }\n}\n\n// TODO PropTypes\n\nexport default TripTable\n","/**\n * Trida predstavujici jednu cestu (jeden Trip) z mista A do mista B v konkretnim case.\n */\nexport class Journey {\n  /**\n     *\n     * @param {{}} location\n     * @param {{Location}} location.start Zacatek cesty. Aka [A]\n     * @param {Location} location.end Konec cesty. Aka [B]\n     * @param {*} date\n     * @param {*} date.start Datum a cas vyjezdu\n     * @param {*} date.end Datum a cas prijezdu\n     * @param {int} distance Vzdalenost mezi misty [A] a [B] v km\n     * @param {*} note Duvod cesty, poznamka\n     * @param {*} mileage\n     * @param {*} mileage.start Stav tachometru na zacatku cesty. Tj. v miste [A]\n     * @param {*} mileage.end Stav tachometru na konci cesty. Tj. v miste [B]\n     */\n  constructor (location = {}, date = {}, distance, note, mileage = {}) {\n    this.location = location\n    this.date = date\n    this.distance = distance\n    this.note = note\n    this.mileage = mileage\n  }\n\n  describe () {\n    var description = 'The ' + this.type + ' is a ' + this.occasion + 'pastry, has a ' + this.flavor + ' flavor, ' + this.levels + ' layer(s), and costs ' + this.price + '.'\n    return description\n  }\n}\n\n/**\n * Jedno misto/mesto\n */\nexport class Location {\n  /**\n     *\n     */\n  constructor (name, code, zip, insideDistance) {\n    this.code = code\n    this.insideDistance = this.insideDistance\n    this.name = name\n    this.zip = zip\n  }\n\n  describe () {\n    return 'Misto [' + this.code + ']: ' + this.name + ', ' + this.zip + '; Povolena jizda: ' + this.insideDistance\n  }\n}\n/**\n * Definice cesty mezi dvema body\n  * @param {{Location}} start Zacatek cesty. Aka [A]\n  * @param {Location} end Konec cesty. Aka [B]\n */\n\nexport class Trip {\n  /**\n     *\n     */\n  constructor (start = Location, end = Location, distance = 0, roundTrip = false) {\n    this.start = start\n    this.end = end\n    this.distance = distance\n    this.roundTrip = roundTrip\n  }\n\n  describe () {\n    return 'Cesta [' + this.start.code + '] - [' + this.end.code + ']'\n  }\n}\n\nexport class Distance {\n  constructor ({ from, to, distance }) {\n    this.from = from\n    this.to = to\n    this.distance = distance\n  }\n\n  describe () {\n    return 'Vzdalenost mezi [' + this.from.name + '] a [' + this.to.name + '] je: ' + this.distance\n  }\n}\n","import _isEmpty from 'lodash/isEmpty'\nimport _shuffle from 'lodash/shuffle'\nimport _sample from 'lodash/sample'\nimport { Step1 } from './App'\nimport { Journey } from './journey/Journey'\n\nexport const MAX_KM_DAY = 360\n\n/** Generovani */\nexport const generateJourneys = (step1 = Step1, trips = []) => {\n  console.group('Generovani cest')\n  const journeys = []\n  console.log('obdobi')\n  console.log('vychozi lokace', step1.startLocation)\n  console.log('celkova vzdalenost', step1.distance)\n  console.log('mozna mista cesty', trips)\n  if (!isStep1Valid(step1) || _isEmpty(trips)) {\n    console.error('nemam data')\n    return journeys\n  }\n\n  // dostanu pole vsech pracovnich dnu\n  let workDays = getDays(step1.dateFrom, step1.dateTo)\n  if (_isEmpty(workDays)) {\n    console.error('nemam pracovni dny')\n    return journeys\n  }\n\n  // pokud by melo byt najeto vice nez 360km/den, nedovolime to\n  if (MAX_KM_DAY < step1.distance / trips.length) {\n    console.error('Moc velka vzdalenost na %s dnu', step1.distance)\n  } else {\n    console.log('KM denne', step1.distance / workDays.length)\n  }\n\n  // zamicham pole pracovnich dnu\n  workDays = _shuffle(workDays)\n\n  workDays.forEach((date, i) => {\n    console.group('Workday', date)\n    // Pro kazdy den\n    // zkontroluju, ze jsme nepresahli zadany pocet km\n    const journeysKm = _isEmpty(journeys) ? 0 : journeys.reduce((previousValue = 0, currentValue) => previousValue + currentValue.distance, 0)\n    console.log('celkem zatim najeto', journeysKm)\n\n    const note = getNote()\n\n    if (journeysKm < step1.distance) {\n      const randomTrip = _sample(trips)\n      // pokud ne, vyberu random trip a udelam z nej Journey\n      console.log('trip', randomTrip.describe())\n      journeys.push(\n        new Journey(\n          { start: randomTrip.start, end: randomTrip.end },\n          new Date(date),\n          randomTrip.distance,\n          note\n        )\n      )\n      if (randomTrip.roundTrip) {\n        journeys.push(\n          new Journey(\n            { start: randomTrip.end, end: randomTrip.start },\n            new Date(date),\n            randomTrip.distance,\n            note\n          )\n        )\n      }\n    } else {\n      console.log('Dosazeno cilove vzdalenosti, koncime. Celkem mame %i cest', journeys.length)\n    }\n\n    console.groupEnd()\n  })\n\n  console.log('radime zaznamy chronologicky')\n  journeys.sort((a, b) => a.date - b.date)\n  // TODO: pridat stav hodometeru??\n\n  console.groupEnd()\n\n  return journeys\n}\n\n/**\n * Jsou data v prvnim kroku zadana tak, ze muzeme vygeberovat summary? Potrebujeme vyplnena vsechna pole\n * @param {object} step1 Data z prvniho kroku\n */\nexport function isStep1Valid (step1 = Step1) {\n  return Boolean(step1 && step1.dateFrom && step1.dateTo && step1.startLocation && step1.dateFrom.valueOf() <= step1.dateTo.valueOf() && step1.distance && step1.distance > 0)\n}\n\n/* TODO: prazdniny */\n/* TODO: Moment, moment-range */\nexport function getDays (dateFromString, dateToString, holidays) {\n  if (!dateFromString || !dateToString || dateFromString === dateToString) {\n    console.error('Neplatne parametry pro zjisteni pracovnich dnu')\n    return []\n  }\n  if (dateFromString > dateToString) {\n    console.error('Datum zacatku je po datumu konce', dateFromString, dateToString)\n    return []\n  }\n\n  let arr = []\n  const dateFrom = new Date(dateFromString)\n  const dateTo = new Date(dateToString)\n  const dt = dateFrom\n  for (arr = []; dt <= dateTo; dt.setDate(dt.getDate() + 1)) {\n    if (dt.getDay() !== 0 && dt.getDay() !== 6) {\n      arr.push(new Date(dt))\n    }\n  }\n  return arr\n}\n\nexport function getNote () {\n  return _sample(['Služební cesta', 'Nákup materiálu', 'Schůzka s klientem'])\n}\n","import React from 'react'\nimport XLSX from 'xlsx'\nimport { Button, Collapse, Navbar, NavbarBrand, Container, NavItem, NavLink, Nav, Row, Col, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, FormGroup, Input, Form, Label } from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport TripTable from './components/TripTable'\nimport { Journey, Location, Trip } from './journey/Journey'\nimport { generateJourneys, isStep1Valid } from './logika'\n\n// TODO moment\n// TODO prejmenovat na EasySetup - nastavuje to vsechno\nexport function handleSetData (year) {\n  console.log('Nastavuju rok', year)\n  this.setState({\n    journeys: [],\n    step1: {\n      dateFrom: `${year}-01-01`,\n      dateTo: `${year}-12-31`,\n      distance: 5000,\n      // mileageStart: 100000\n      // spz: 'SPZ0001',\n      startLocation: 'PnL'\n    },\n    summary: {\n      distance: 0,\n      odometerEnd: 0,\n      odometerStart: 0\n    }\n  })\n}\n\nexport class Step1 {\n  /** TODO jsdoc */\n  constructor (dateFrom, dateTo, distance, mileageStart, spz, startLocation = Location) {\n    this.dateFrom = dateFrom\n    this.dateTo = dateTo\n    this.distance = distance\n    this.mileageStart = mileageStart\n    this.spz = spz\n    this.startLocation = startLocation\n  }\n\n  describe () {\n    var description = 'STEP1: TODO'\n    return description\n  }\n}\n\n/**\n *\n * @param {{}} step1\n * @param {Journey[]} journeys\n */\nexport function getSummary (step1 = {}, journeys = []) {\n  console.group('Update shrnuti')\n  console.log('step1', step1)\n  console.log('cesty', journeys)\n\n  /** Celkova vzdalenost vsech jizd dohromady */\n  const distance = journeys.reduce((total, journey) => total + journey.distance, 0)\n\n  console.groupEnd()\n  return {\n    distance: distance,\n    odometerStart: Number(step1.mileageStart) || 0,\n    odometerEnd: (Number(step1.mileageStart) || 0) + distance\n  }\n}\n\nexport default class LogBookApp extends React.Component {\n  constructor (props) {\n    super(props)\n\n    // TODO unfake\n    const LOCATION_PNL = new Location('Předměřice n. Labem', 'PnL', '50302')\n\n    this.handleStep1Change = this.handleStep1Change.bind(this)\n    this.handleJourneyChange = this.handleJourneyChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleSetData = handleSetData.bind(this)\n    this.generateJourneys = generateJourneys.bind(this)\n    this.handleUpdateSummary = this.handleUpdateSummary.bind(this)\n    this.state = {\n      collapsed: true,\n      /** Jednotlive jizdy za dane obdobi */\n      journeys: [\n\n      ],\n      /** Seznam vsech mist, kam muzu jezdit. TODO - do zaskrtavaciho seznamu a samostatneho souboru */\n      trips: [\n        new Trip(\n          LOCATION_PNL,\n          new Location('Praha', 'PRG', '10100'),\n          120,\n          true\n        ),\n        new Trip(\n          LOCATION_PNL,\n          new Location('Hradec Králové', 'HK', '50002'),\n          9,\n          true\n        )\n      ],\n      /** Vychozi hodnoty pro generovani jizd */\n      step1: {\n        dateFrom: '',\n        dateTo: '',\n        distance: 0,\n        mileageStart: '',\n        spz: '',\n        startLocation: 'HK'\n      },\n      /** Shrnuti cest za dane obdobi vypocitane z jednotlivych cest */\n      summary: {\n        kmTraveled: 0,\n        mileageEnd: 0\n      }\n    }\n  }\n\n  toggleNavbar () {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  /** Kliknuto na Generovat */\n  handleSubmit (event) {\n    // overit, ze mam vsechny zadany v prvnim kroku\n    if (isStep1Valid(this.state.step1)) {\n      // vygenerovat\n      const journeys = this.generateJourneys(this.state.step1, this.state.trips)\n      this.setState({ journeys })\n\n      // rozhodnout jestli mit Journeys nezavisle na dnech, nebo zanorene ve dnech\n      // zobrazit shrnuti\n      this.handleUpdateSummary()\n    } else {\n      console.error('Spatne vyplnene vstupni udaje', this.state.step1)\n    }\n  }\n\n  handleStep1Change (event) {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n\n    this.setState({\n      step1: { ...this.state.step1, [name]: value }\n    })\n  }\n\n  handleUpdateSummary () {\n    this.setState({\n      summary: getSummary(this.state.step1, this.state.journeys)\n    })\n    console.log('Nove shrnuti: ', this.state.summary)\n  }\n\n  /**\n    * Zmena udaju v jedne ceste. Zmeni shrnuti. Nutna kontrola konzistence jizd - navazuji kilometry? Mista?\n    * @param {*} event\n    */\n  handleJourneyChange (event) {\n    this.setState({\n      // unfake\n      journeys: [new Journey({}, null, event.target.value, null, null)]\n    })\n    // zobrazit shrnuti\n    this.handleUpdateSummary()\n  }\n\n  /***********/\n  /* logika  */\n  /***********/\n\n  render () {\n    const disabledButtons = !isStep1Valid(this.state.step1)\n    return (\n      <Container>\n        <Navbar color='light' light expand='md'>\n          <NavbarBrand><span role='img' aria-label='logbook'>🚗🍒</span></NavbarBrand>\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className='ml-auto' navbar>\n              <NavItem>\n                <NavLink href='https://github.com/jirihofman/tresen/'>GitHub</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>Options</DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>Option 1</DropdownItem>\n                  <DropdownItem>Option 2</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem onClick={()=>alert(222)}>Reset</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Row>\n          <Col className='col'>\n            <Form className='hidden-print' inline>\n              <Input hidden type='text' name='spz' id='spz' placeholder='SPZ vozidla' valid={this.state.step1.spz} invalid={!this.state.step1.spz} required onChange={this.handleStep1Change} value={this.state.step1.spz} />\n              <Input hidden type='number' name='mileageStart' id='mileageStart' placeholder='Kilometry' step={100} onChange={this.handleStep1Change} value={this.state.step1.mileageStart} />\n              <Button hidden onClick={() => this.handleUpdateSummary(this.state.step1, this.state.journeys)} color='danger'>Update summary</Button>\n              <FormGroup className='mr-3 er bg-light'>\n                <Label for='distance' className='p-3'>Vzdálenost</Label>\n                <Input type='number' name='distance' id='distance' className='col-4' placeholder='Najeto' step={500} onChange={this.handleStep1Change} value={this.state.step1.distance} />\n              </FormGroup>\n              <FormGroup className='mr-3 er bg-light'>\n                <Button onClick={() => this.handleSetData(new Date().getFullYear() - 1)} color='primary'>{new Date().getFullYear() - 1}</Button>\n                <Button onClick={() => this.handleSetData(new Date().getFullYear())} color='primary'>{new Date().getFullYear()}</Button>\n                <Button onClick={() => this.handleSetData(new Date().getFullYear() + 1)} color='primary'>{new Date().getFullYear() + 1}</Button>\n              </FormGroup>\n              <Button\n                onClick={this.handleSubmit} color='primary' style={{ margin: '0.3em' }}\n                disabled={disabledButtons}\n              > Generuj\n              </Button>\n              <Button\n                disabled={disabledButtons}\n                onClick={() => {\n                  /* convert state to workbook */\n                  var tbl = document.getElementById('journeys')\n                  const wb = XLSX.utils.table_to_book(tbl, { raw: true })\n                  /* generate XLSX file and send to client */\n                  XLSX.writeFile(wb, 'sheetjs.xlsx')\n                }}\n              > Export XLS\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Form className='hidden-print' inline>\n            <Col xs={4}>\n              <FormGroup className='mr-1 er bg-light'>\n                <Label for='dateFrom' className='p-3 col-2'>Od</Label>\n                <Input type='date' name='dateFrom' id='dateFrom' placeholder='Od' value={this.state.step1.dateFrom} onChange={this.handleStep1Change} />\n              </FormGroup>\n            </Col>\n            <Col xs={4}>\n              <FormGroup className='mr-1 rder bg-light'>\n                <Label for='dateTo' className='p-3 col-2'>Do</Label>\n                <Input type='date' name='dateTo' id='dateTo' placeholder='Do' value={this.state.step1.dateTo} onChange={this.handleStep1Change} />\n              </FormGroup>\n            </Col>\n            <Col xs={4}>\n              <FormGroup className='mr-1 er bg-light'>\n                <Label for='startLocation' className='p-3'>Výchozí lokace</Label>\n                <Input type='select' name='startLocation' id='startLocation' placeholder='Z' value={this.state.step1.startLocation} onChange={this.handleStep1Change}>\n                  <option>PnL</option>\n                  <option>HK</option>\n                </Input>\n              </FormGroup>\n            </Col>\n          </Form>\n        </Row>\n        <Row>\n          <TripTable journeys={this.state.journeys} />\n        </Row>\n        <style>\n          {'@media print {.hidden-print{display: none;}}'}\n        </style>\n        <Row>TODO</Row>\n\n      </Container>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}